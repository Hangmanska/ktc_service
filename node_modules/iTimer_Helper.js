
function subhours(d1, hr, mi) {
    var d = new Date(d1)
    var ires = d.subTime(hr, mi);//moment_format_time(d.setHours(d.getHours() + hr));    //debugger;
    return ires;
}

function addhours(d1, hr, mi) {
    var d = new Date(d1)
    var ires = d.addTimes(hr, mi);//moment_format_time(d.setHours(d.getHours() + hr));    //debugger;
    //console.log("ires = "  + moment(ires).format("YYYY-MM-DD HH:mm:ss"));

    return ires;
}


Date.prototype.subTime = function (h, m) {
    this.setHours(this.getHours() - h);
    this.setMinutes(this.getMinutes() - m);
    return this;
}

Date.prototype.addTimes = function (h, m) {
    this.setHours(this.getHours() + h);
    this.setMinutes(this.getMinutes() + m);
    return this;
}


exports.subhours = subhours;
exports.addhours = addhours;

/*
setTimeout(function () {
    debugger;
    var ts = "2014-08-01 10:34:22";
    var t = iTimer.subhours(ts, 2, 0);
    t = utl.format_times(t);
    console.log(t);

}, 1000);
*/