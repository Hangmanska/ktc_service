
//#region
var async = require('async');
var squel = require("squel");
var timespan = require('timespan');
var mustache = require("mustache");
var moment = require('moment');


var utl = require('Utility.js');

var utcp = require('Utility_tcp.js');
var linq = require('linq.js');

var inout = require('inout_polygon.js');
var iRep = require('iReport.js');
var out_of_service = require('out_of_service.js');
var hvt = require('harvester_in_out_farm.js');
var ktc2cane = require('ktc2cane.js');

var db = require('iConnectdb_ktc.js');
var iconn = require('conn_sugar_cane.js');
var pg_htt = new db.im2(iconn.get_dbconfig_htt());
var htt_realtime = new db.im2(iconn.get_dbconfig_realtime());
var radius_track_and_havester = 15;
var meter_buffer = 20; //20 meter


var status_cutting = 5;
    //#endregion

var htt_gen_id = {
    now: function () { return moment().format('YYYYMMDDHHmmssSSS'); }
};


function create_id()
{
    return htt_gen_id.now();
}

//#region harvester



function havester_operate(data, callback)
{
    debugger;
    var doprocess = false;

    //console.log('havester gen_id ' + create_id());


  // console.log(data);
    var result = { 'column': "htt_status_operation", 'key': data.blackbox_id, 'val': '', 'cane_status': ' ' }
    //if(data.r_io==5){
    //    console.log('true')
    //    }
    //else {
    //    console.log('false')
    //}

    switch (data.r_io)
    {
        case 5: {
           // console.log('5 true')
            if (data.htt_status_operation != 'CUTTING_AND_LOADING')
            {
            
                var st1 = false; var st2 = false;
                var t = {'harvester_name':' ','truck_name':' ', 'is_inzone': false, 'name_farmer': ' ', 'zone_id': ' ', 'truck_blackbox_id': ' ', 'plot_code': ' ', 'r_time': ' ','qt':' ','truck_distance':' ' };

                //inside farm's
             hvt.is_infarm(data.blackbox_id, data.lon, data.lat, function (result1)
                {
                    debugger;
                    if (result1.length > 0)
                    {
                        console.log('++++ havester_operate inside farm +++');
                        t.harvester_name = result1[0].harvester_name;
                        t.plot_code = result1[0].plot_code;
                        t.is_inzone = result1[0].is_inzone;
                        t.zone_id = result1[0].zone_id;
                        t.name_farmer = result1[0].name;
                        t.qt = result1[0].que;
                        st1 = true;
                        fin();
                    }
                    else
                    {
                        st1 = true;
                        fin();
                    }
                  
                });

           
                function fin()
                {
                    if (st1)
                    {
                    //console.log(' +++++ Truck and havester_operate  ' + JSON.stringify(t));
                        console.log(' +++++ havester_operate  ' + JSON.stringify(t));
                      //  t.truck_blackbox_id = '189600110834'
                        debugger;
                       // if (t.truck_blackbox_id != ' ' && t.plot_code != ' ')
                        if (t.plot_code != ' ')
                        {
                            result.val = "CUTTING_LOADING";
                            result.cane_status = "CUTTING_AND_LOADING";
                          
                           
                            
                             var transectionid = create_id(); //moment().format("YYYYMMDDHHmmssSSS");

                                //set harvester
                             var sql_harvester = "UPDATE realtime SET htt_status_operation=" + utl.sqote(result.cane_status) + ",htt_qt=" + utl.sqote(t.qt) + ",htt_match_harvester_truck=" + utl.sqote(data.blackbox_id ) + ",htt_plotcode=" + utl.sqote(t.zone_id) + ",htt_name_farmer=" + utl.sqote(t.name_farmer) + " WHERE modem_id=" + utl.sqote(data.blackbox_id);

                               // console.log(transectionid);
                                //set truck
                               // var time_now = moment().format('YYYY-MM-DD HH:mm:ss');
                              //  var sql_truck = "UPDATE realtime SET htt_qt=" + utl.sqote(t.qt) + ",htt_transectionid=" + utl.sqote(transectionid) + ",htt_harvester_name=" + utl.sqote(t.harvester_name) + ",htt_truck_name=" + utl.sqote(t.truck_name) + ", htt_match_harvester_truck=" + utl.sqote(data.blackbox_id + ',' + t.truck_blackbox_id) + ",htt_plotcode=" + utl.sqote(t.plot_code) + ",htt_status_operation='LOADING',htt_place='FARM', htt_cuttingtime=" + utl.sqote(time_now) + ",htt_factorytime=null ,htt_truck_distance=" + utl.sqote(t.truck_distance) + " WHERE modem_id=" + utl.sqote(t.truck_blackbox_id);

                               //  console.log("sql_harvester " + sql_harvester);

                                // console.log("sql_truck " + sql_truck);

                                 iexcute(sql_harvester, function (xres1)
                                 {
                                    if (xres1 == 'oK')
                                    {
                                       // console.log('**** xres2 ' + xres2)
                                      //  final_up(t, function (rest) {
                                            callback(xres1);
                                            return;
                                      //  });

                                        
                                    }

                                });

                                function final_up(t, callback)
                                {

                                    set_recnow_operate(result, function (res) {
                                        debugger;
                                        if (result.cane_status != ' ')
                                        {
                                            var cane_para_harvest = t.harvester_name + ',' + data.r_time + ',' + result.cane_status;
                                            ktc2cane.set_harvest_vehicle_working_current(cane_para_harvest, function (xres1) {
                                                console.log(xres1);
                                            });

                                            var cane_para_truck = t.truck_name + ',' + data.r_time + ',LOADING,FARM,' + t.harvester_name
                                            ktc2cane.set_delivery_vehicle_working_current(cane_para_truck, function (xres2) {
                                                console.log(xres2);
                                            });

                                            //ส่ง เวลา ณ สถานที่ต่าง ๆ ของรถบรรทุก เวลาตัด
                                            get_transectionid(t.truck_blackbox_id, function (res_transectionid)
                                            {
                                                if (res_transectionid != 0)
                                                {
                                                  //  var cane_para_timestap = res_transectionid + ',' + data.r_time //+ ',cutting_timestamp'
                                                   // ktc2cane.set_harvester_cutting_timestamp(cane_para_timestap, function (res_timestap)
                                                  //  {
                                                       // if (res_timestap != ' ')
                                                       // {
                                                          //  console.log(cane_para_timestap + ' **** harvester_cutting_timestamp *** ' + res_timestap);

                                                            ktc2cane.set_harvest_order_displacement(res_transectionid, data.lon, data.lat, function (res_displacement)
                                                            {
                                                                if (res_displacement != ' ')
                                                                {
                                                                    console.log('set displacement ' + res_displacement);
                                                                    callback(true);
                                                                    return;
                                                                }
                                                            });

                                                      //  }
                                                       // else {
                                                       //     callback([]);
                                                       //     return;
                                                       // }
                                                   // });

                                                }
                                                else {
                                                    callback([]);
                                                    return;
                                                }
                                            });

                                        }
                                        else
                                        {
                                            callback([]);
                                            return;
                                        }

                                        doprocess = false;
                                    });
                                }


                        }
                        else
                        {
                            callback([]);
                            return;
                        }
                       
                    }
                }

            }
        
        } break;
        default: {
          //  console.log('5 false')
            if (data.htt_status_operation != 'UNCUTTING_LOADING')
            {
                result.val = "UNCUTTING_LOADING"; doprocess = true;
                inout.is_inconfig_polygon(data.blackbox_id, data.lon, data.lat, function (rows) {
                    debugger;
                    if (rows.length > 0) {
                        rows = rows[0];
                        if (rows.is_inzone) //inside farm's
                        {
                            var sql = "UPDATE realtime SET htt_plotcode=" + utl.sqote(rows.plot_code) + ",htt_name_farmer=" + utl.sqote(rows.name) + " WHERE modem_id=" + utl.sqote(data.blackbox_id);
                            iexcute(sql, function (xres1) {
                                if (xres1 == 'oK') {
                                    //data.r_status = 10;
                                    //iRep.check_history_status_havester(data, rows, function (gres) { });
                                    callback(xres1);
                                    return;
                                }
                            })

                        }
                        else
                        {
                            console.log('UNCUTTING_LOADING but not inside farms');
                            callback([]);
                            return;
                        }
                    }
                });
            }

        } break;
       
    }

    /*  */
    debugger;
    data.r_status = parseInt(data.r_status)
    switch (data.r_status)
    {
        case 3: {
            result.val = "IN_TRANSIT"; result.cane_status = "IN_TRANSIT";
            doprocess = true;
        } break;
        case 2: {
            result.val = "IDELING"; result.cane_status = "ENGINE_ON";
            doprocess = true;
        } break;
        case 1: {
            result.val = "STOP"; result.cane_status = "ENGINE_OFF";
            doprocess = true;
        } break;
    }
   
  

    if (doprocess) {
        debugger;
        set_recnow_operate(result, function (res)
        {
          
            //if (result.cane_status != ' ')
            //{
            //    ktc2cane.set_harvest_vehicle_working_current(data.htt_harvester_name + ',' + data.r_time + ',' + result.cane_status, function (xres) {
            //        console.log(xres);
            //    });
            //}

            doprocess = false;
            callback(res);
            return;
        });
    }
  
    function find_truck() {
        hvt.has_harvester_truck(data.blackbox_id, data.lon, data.lat, radius_track_and_havester, function (result2) {
            debugger;
            if (result2.blackbox_id != 0) {
                console.log('++++ truck_operate inside farm +++');
                t.truck_blackbox_id = result2.blackbox_id;
                t.r_time = result2.r_time;
                t.truck_name = result2.name;
                t.truck_distance = result2.r_distance;
                st2 = true;
                fin();
            }
            else {
                st2 = true;
                fin();
            }

        });
    }
}

 //เช็ครถตัด ทำงานนอกพื้นที่
function havester_workout_zone(data, callback) {
    var st1 = false; var st2 = false;
    var result = { 'truck_blackbox': ' ', 'plot_code': ' ', 'zone_id': ' ', 'workout_zone': ' ', 'r_time': ' ' };
    // var x = { 'lon': '102.134222280683', 'lat': '16.4865332748977' };
    var zone_data = ' ';
    if (data.r_io == status_cutting) {
        debugger;
        //Test Add End workout_zone
        /*
        var data = {
            'blackbox_id': '189600124536', 'r_time': '2016-01-05 21:55:11', 'r_status': '77' //r_status2
     , 'tambol': 'เขาน้อย', 'amphur': 'ปราณบุรี', 'province': 'ประจวบคีรีขันธ์', 'lat': '12.379589', 'lon': '99.892066'
    , 'id': ' ', 'total_time': ' '
        }*/

        hvt.is_infarm_buffer(data.blackbox_id, data.lon, data.lat, meter_buffer, function (result1) {
            if (result1.length > 0) {
                result.plot_code = result1[0].plot_code; // plot_code ไม่เป็น 0 คือทำในไร่
                result.workout_zone = result1[0].is_workout_zone; // true คือ รถตัด ไม่ตรงกับที่ ลงทะเบียนในแปลง ที่กำหนด
                result.zone_id = result1[0].zone_id
                zone_data = { 'r_time': data.r_time, 'blackbox_id': data.blackbox_id, 'plot_code': result.plot_code, 'zone_id': result.zone_id, 'workout_zone': result.workout_zone };

                //Test Add workout_zone
                //#region
                /*
                has_workout_zone(zone_data, function (rows)
                {
                    if (rows.length == 0) //ยังไม่พบสตาร์ทรีพอร์ท history_status_havester status_type_start='77' AND blackbox_id= '189600124536'
                    {
                        data.r_status = 77;
                        iRep.check_history_status_havester(data, zone_data, function (x) {
                            debugger;
                            console.log('set report workout_zone ' + x);
                   
                        });
                    }
                });
                */
                //#endregion
            }
            else {
                //Add End report workout_zone
                data.r_status = 77;
                zone_data = { 'r_time': data.r_time, 'blackbox_id': data.blackbox_id, 'plot_code': result.plot_code, 'zone_id': result.zone_id, 'workout_zone': result.workout_zone };
                iRep.check_history_status_havester(data, zone_data, function (x) {
                    debugger;
                    console.log('set end_report workout_zone ' + x);

                });
            }
            st1 = true;
            fin();
        });

        //+ (รถบรรทุก อยู่ภายใน 15 เมตร)
        /*
        hvt.has_harvester_truck(data.blackbox_id, data.lon, data.lat, radius_track_and_havester, function (result2) {
            // result.htt_id_lost = result2.htt_id_lost;
            result.truck_blackbox = result2.blackbox_id;
            result.r_time = result2.r_time;
            st2 = true;
            fin();
        });
        */

        function fin() {
            debugger;
            if (st1) //&& st2
            {
                if (result.workout_zone == true) //result.truck_blackbox != 0 &&
                {
                    has_workout_zone(zone_data, function (rows) {
                        if (rows.length == 0) //ยังไม่พบสตาร์ทรีพอร์ท history_status_havester status_type_start='77' AND blackbox_id= '189600124536'
                        {
                            data.r_status = 77;
                            iRep.check_history_status_havester(data, zone_data, function (x) {
                                debugger;
                                console.log('set report workout_zone ' + x);
                                var para = { 'column': "htt_workout_zone", 'key': data.blackbox_id, 'val': 'workout_zone' }
                                set_recnow_operate(para, function (r) {
                                    callback(r);
                                    return;
                                });

                            });
                        }
                    });


                }
                else {
                    var para = { 'column': "htt_workout_zone", 'key': data.blackbox_id, 'val': '' }
                    set_recnow_operate(para, function (r) {
                        callback(r);
                        return;
                    });

                }

            }
        }
    }
}

//now not use เช็ครถตัดเสีย พร้อมใช้งานริไม่ โรงน้ำตาลตะวันออก 
function havester_useability(data, callback)
{
    // (รถตัด (สายพานลำเลียงหมุน + อยู่ในไร่)) + (รถบรรทุก อยู่ภายใน 15 เมตร)
    var st1 = false; var st2 = false;
    var result = { 'blackbox_id': ' ', 'plot_code': ' ','htt_id_lost':' ' ,'r_time':' ' };
   // result.blackbox_id = res[0]['blackbox_id'];
  //  result.r_time = res[0]['r_time'];
  //  result.htt_id_lost = res[0]['htt_id_lost'];

    if (data.htt_status_operation == 'out_of_service' && data.r_io == status_cutting)
    {
        hvt.is_infarm(data.blackbox_id, data.lon, data.lat, function (result1)
        {
            if (result1.length > 0) {
                result.plot_code = result1[0].plot_code;
            }
            st1 = true;
            fin();
        });

        hvt.has_truck_havester(data.blackbox_id, data.lon, data.lat, radius_track_and_havester, function (result2)
        {
            result.htt_id_lost = result2.htt_id_lost;
            result.blackbox_id = result2.blackbox_id;
            result.r_time = result2.r_time;
            st2 = true;
            fin();
        });

        function fin()
        {
            if (st1 && st2)
            {
                out_of_service.set_havester_ready(result, function (xres) {
                    callback(xres);
                    return;
                });
            }
        }
    }
}





function havester_operate_with_track(data, callback) {
    debugger;
    var doprocess = false;

    //console.log('havester gen_id ' + create_id());


    // console.log(data);
    var result = { 'column': "htt_status_operation", 'key': data.blackbox_id, 'val': '', 'cane_status': ' ' }
    switch (data.r_io) {
        case 11: {
            if (data.htt_status_operation != 'CUTTING_AND_LOADING') {

                var st1 = false; var st2 = false;
                var t = { 'harvester_name': ' ', 'truck_name': ' ', 'is_inzone': false, 'name_farmer': ' ', 'zone_id': ' ', 'truck_blackbox_id': ' ', 'plot_code': ' ', 'r_time': ' ', 'qt': ' ', 'truck_distance': ' ' };

                //inside farm's
                hvt.is_infarm(data.blackbox_id, data.lon, data.lat, function (result1) {
                    debugger;
                    if (result1.length > 0) {
                        console.log('++++ havester_operate inside farm +++');
                        t.harvester_name = result1[0].harvester_name;
                        t.plot_code = result1[0].plot_code;
                        t.is_inzone = result1[0].is_inzone;
                        t.zone_id = result1[0].zone_id;
                        t.name_farmer = result1[0].name;
                        t.qt = result1[0].qt;
                        st1 = true;
                        fin();
                    }
                    else {
                        st1 = true;
                        fin();
                    }

                });


                hvt.has_harvester_truck(data.blackbox_id, data.lon, data.lat, radius_track_and_havester, function (result2) {
                    debugger;
                    if (result2.blackbox_id != 0) {
                        console.log('++++ truck_operate inside farm +++');
                        t.truck_blackbox_id = result2.blackbox_id;
                        t.r_time = result2.r_time;
                        t.truck_name = result2.name;
                        t.truck_distance = result2.r_distance;
                        st2 = true;
                        fin();
                    }
                    else {
                        st2 = true;
                        fin();
                    }

                });

                function fin() {
                    if (st1 && st2) {
                        console.log(' +++++ Truck and havester_operate  ' + JSON.stringify(t));

                        //  t.truck_blackbox_id = '189600110834'
                        debugger;
                        if (t.truck_blackbox_id != ' ' && t.plot_code != ' ') {
                            result.val = "CUTTING_LOADING";
                            result.cane_status = "CUTTING_AND_LOADING";



                            var transectionid = create_id(); //moment().format("YYYYMMDDHHmmssSSS");

                            //set harvester
                            var sql_harvester = "UPDATE rec_now SET htt_status_operation=" + utl.sqote(result.cane_status) + ",htt_qt=" + utl.sqote(t.qt) + ",htt_match_harvester_truck=" + utl.sqote(data.blackbox_id + ',' + t.truck_blackbox_id) + ",htt_plotcode=" + utl.sqote(t.zone_id) + ",htt_name_farmer=" + utl.sqote(t.name_farmer) + " WHERE blackbox_id=" + utl.sqote(data.blackbox_id);

                            // console.log(transectionid);
                            //set truck
                            var time_now = moment().format('YYYY-MM-DD HH:mm:ss');
                            var sql_truck = "UPDATE rec_now SET htt_qt=" + utl.sqote(t.qt) + ",htt_transectionid=" + utl.sqote(transectionid) + ",htt_harvester_name=" + utl.sqote(t.harvester_name) + ",htt_truck_name=" + utl.sqote(t.truck_name) + ", htt_match_harvester_truck=" + utl.sqote(data.blackbox_id + ',' + t.truck_blackbox_id) + ",htt_plotcode=" + utl.sqote(t.plot_code) + ",htt_status_operation='LOADING',htt_place='FARM', htt_cuttingtime=" + utl.sqote(time_now) + ",htt_factorytime=null ,htt_truck_distance=" + utl.sqote(t.truck_distance) + " WHERE blackbox_id=" + utl.sqote(t.truck_blackbox_id);

                            //  console.log("sql_harvester " + sql_harvester);

                            // console.log("sql_truck " + sql_truck);

                            iexcute(sql_harvester, function (xres1) {
                                if (xres1 == 'oK') {
                                    iexcute(sql_truck, function (xres2) {
                                        if (xres2 == 'oK') {
                                            //#region
                                            //Add Harvester report Cutting
                                            /* data.r_status = 11;
                                            iRep.check_history_status_havester(data, t, function (gres1)
                                            {
                                                //callback(gres);
                                                //return;
                                               
                                                if (gres1 != ' ')
                                                {
                                                    //* Add Truck report Loading
                                                    data.r_status = '77'
                                                    iRep.check_history_status_havester(data, t, function (gres2)
                                                    {
                                                        final_up(t);
                                                        callback(gres2);
                                                        return;
                                                    });
                                                }
                                               
                                            });
                                            */
                                            //#endregion
                                            console.log('**** xres2 ' + xres2)
                                            final_up(t, function (rest) {
                                                callback(rest);
                                                return;
                                            });
                                        }

                                    });
                                }

                            });

                            function final_up(t, callback) {

                                set_recnow_operate(result, function (res) {
                                    debugger;
                                    if (result.cane_status != ' ') {
                                        var cane_para_harvest = t.harvester_name + ',' + data.r_time + ',' + result.cane_status;
                                        ktc2cane.set_harvest_vehicle_working_current(cane_para_harvest, function (xres1) {
                                            console.log(xres1);
                                        });

                                        var cane_para_truck = t.truck_name + ',' + data.r_time + ',LOADING,FARM,' + t.harvester_name
                                        ktc2cane.set_delivery_vehicle_working_current(cane_para_truck, function (xres2) {
                                            console.log(xres2);
                                        });

                                        //ส่ง เวลา ณ สถานที่ต่าง ๆ ของรถบรรทุก เวลาตัด
                                        get_transectionid(t.truck_blackbox_id, function (res_transectionid) {
                                            if (res_transectionid != 0) {
                                                //  var cane_para_timestap = res_transectionid + ',' + data.r_time //+ ',cutting_timestamp'
                                                // ktc2cane.set_harvester_cutting_timestamp(cane_para_timestap, function (res_timestap)
                                                //  {
                                                // if (res_timestap != ' ')
                                                // {
                                                //  console.log(cane_para_timestap + ' **** harvester_cutting_timestamp *** ' + res_timestap);

                                                ktc2cane.set_harvest_order_displacement(res_transectionid, data.lon, data.lat, function (res_displacement) {
                                                    if (res_displacement != ' ') {
                                                        console.log('set displacement ' + res_displacement);
                                                        callback(true);
                                                        return;
                                                    }
                                                });

                                                //  }
                                                // else {
                                                //     callback([]);
                                                //     return;
                                                // }
                                                // });

                                            }
                                            else {
                                                callback([]);
                                                return;
                                            }
                                        });

                                    }
                                    else {
                                        callback([]);
                                        return;
                                    }

                                    doprocess = false;
                                });
                            }


                        }
                        else {
                            callback([]);
                            return;
                        }

                    }
                }

            }

        } break;
        case 10: {
            if (data.htt_status_operation != 'UNCUTTING_LOADING') {
                result.val = "UNCUTTING_LOADING"; doprocess = true;
                inout.is_inconfig_polygon(data.blackbox_id, data.lon, data.lat, function (rows) {
                    debugger;
                    if (rows.length > 0) {
                        rows = rows[0];
                        if (rows.is_inzone) //inside farm's
                        {
                            var sql = "UPDATE rec_now SET htt_plotcode=" + utl.sqote(rows.plot_code) + ",htt_name_farmer=" + utl.sqote(rows.name) + " WHERE blackbox_id=" + utl.sqote(data.blackbox_id);
                            iexcute(sql, function (xres1) {
                                if (xres1 == 'oK') {
                                    //data.r_status = 10;
                                    //iRep.check_history_status_havester(data, rows, function (gres) { });
                                    callback(xres1);
                                    return;
                                }
                            })

                        } else {
                            console.log('UNCUTTING_LOADING but not inside farms');
                            callback([]);
                            return;
                        }
                    }
                });
            }

        } break;

    }

    data.r_status = parseInt(data.r_status)
    switch (data.r_status) {
        case 3: {
            result.val = "IN_TRANSIT"; result.cane_status = "IN_TRANSIT";
            doprocess = true;
        } break;
        case 2: {
            result.val = "IDELING"; result.cane_status = "ENGINE_ON";
            doprocess = true;
        } break;
        case 1: {
            result.val = "STOP"; result.cane_status = "ENGINE_OFF";
            doprocess = true;
        } break;
    }

    if (doprocess) {
        debugger;
        set_recnow_operate(result, function (res) {
            
            if (result.cane_status != ' ') {
                ktc2cane.set_harvest_vehicle_working_current(data.htt_harvester_name + ',' + data.r_time + ',' + result.cane_status, function (xres) {
                    console.log(xres);
                });
            }

            doprocess = false;
            callback(res);
            return;
        });
    }

}

function harvester_stores_status_cutting(htt_status_cutting, blackbox_harvester,callback) {
    var sql_harvester = "UPDATE rec_now SET htt_status_cutting="+utl.sqote(htt_status_cutting)+" WHERE blackbox_id=" + utl.sqote(blackbox_harvester);
    iexcute(sql_harvester, function (res) {
        
        console.log(' set htt_status_cutting ' + res);
        callback(res);
        return;
    });
}

//#endregion


//#region truck

//ติดตามสถานะรถบรรทุกด้านการปฎิบัติงาน
function truck_operate(data, callback)
{
   // console.log('truck_operate ' + create_id());
    debugger;
    var doprocess = false;
    var result = { 'column': "htt_status_operation", 'key': data.blackbox_id, 'val': '', 'cane_status': ' ','loading_harvest_vehicle_code':' ' }

    //check is finish loading and first out polygon
    if (data.htt_status_operation == 'LOADING')
    {
        inout.is_inconfig_polygon_buffer(data.blackbox_id, data.lon, data.lat, meter_buffer, function (result1)
        {
            if (result1.length == 0)//ออกจากไร่
            {
                // result.plot_code = result1[0].plot_code;
                //set truck
                var time_now = moment().format('YYYY-MM-DD HH:mm:ss');
                var sql_truck = "UPDATE rec_now SET htt_status_operation='IN_TRANSIT', htt_status_truck='HARD',htt_place='ROAD_WITH_CANE',htt_farm_leaving=" + utl.sqote(time_now)+" WHERE blackbox_id=" + utl.sqote(data.blackbox_id);

                iexcute(sql_truck, function (res_sql_truck)
                {

                    if (res_sql_truck == 'oK')
                    {
                        var s1 = false; var s2 = false;
                        var para = { 'companyCode': ' ', 'beYear': ' ', 'bpCode': ' ', 'plotCode': ' ', 'dlvVehicleCode': ' ', 'harvestVehicleCode': ' ', 'transactionId': ' ', 'cuttingTimestamp': ' ' };
                        get_master_factory(function (rows)
                        {
                            if (rows.length > 0)
                            {
                                para.companyCode = rows[0].company_code
                                para.beYear = rows[0].year
                            }
                            s1 = true;
                            fin();
                        })

               
                        //  data.blackbox_id='189600110834'
                        get_caneHO(data.blackbox_id, function (rows)
                        {
                            if (rows.length > 0)
                            {
                                debugger;
                                rows = rows[0];
                                para.bpCode = rows.bpcode;
                                para.plotCode = rows.plotcode;
                                para.dlvVehicleCode = rows.truck_code;
                                para.harvestVehicleCode = rows.harvester_code;
                                para.transactionId = rows.htt_transectionid;
                                para.cuttingTimestamp = rows.htt_cuttingtime;

                                result.cane_status = 'IN_TRANSIT';
                                result.loading_harvest_vehicle_code = rows.harvester_code;
                                isave_ho_log(para);
                            }
                            s2 = true;
                            fin();
                        });


                        //* call CANE Service When Finish Loading (Generate SaveHO)
                        function fin()
                        {
                            if (s1==true && s2==true)
                            {
                                var is_fin1 = false; var is_fin2 = false;

                                ktc2cane.saveHO(para, function (xres)
                                {
                                    debugger;
                                    console.log(' :-) response from cane '+xres);
                                    if (xres != ' ') {
                                        // cal_delivery_vehicle_working_current(data, result);
                                        var cane_para = data.htt_truck_name + ',' + data.r_time + ',' + result.cane_status + ',ROAD_WITH_CANE,' + result.loading_harvest_vehicle_code
                                        ktc2cane.set_delivery_vehicle_working_current(cane_para, function (xres) {
                                            // console.log(xres);
                                            //callback(xres);
                                            //return;
                                            // is_fin1 = true;
                                            // issend_finish();
                                            callback('oK');
                                            return;

                                        });
                                    } else {
                                        callback([]);
                                        return;
                                    }


                                    //* !!!! close Truck report Loading
                                    //data.r_status = '77'
                                    //iRep.check_history_status_havester(data, t, function (gres2) {
                                    //    callback(gres2);
                                    //    return;
                                    //});
                                });

                                //ส่ง เวลา ณ สถานที่ต่าง ๆ ของรถบรรทุก เวลาออกจากไร่
                                /*
                                get_transectionid(data.blackbox_id, function (res_transectionid)
                                {
                                    if (res_transectionid != 0)
                                    {
                                        var cane_para_timestap = res_transectionid + ',' + data.r_time + ',farm_leaving_timestamp'
                                        console.log(cane_para_timestap + ' set_delivery_vehicle_timestamp ');

                                        ktc2cane.set_delivery_vehicle_timestamp(cane_para_timestap, function (res_timestap)
                                        {
                                            console.log('set_delivery_vehicle_timestamp farm_leaving_timestamp' + res_timestap);
                                            is_fin2 = true;
                                            issend_finish();
                                        });
                                    }
                                });
                             

                                function issend_finish()
                                {
                                    if (is_fin1 && is_fin2)
                                    {
                                        callback('oK');
                                    } 
                                }
   */

                            }
                        }

                    }
                    else
                    {
                        console.log('update truck_operate error : ' + sql_truck)
                        callback([]);
                        return;
                    }

                });

            }
            else
            {
                console.log(' truck_operate insid farm : ' + JSON.stringify(result1))
                callback([]);
                return;
            }
            

        });

    } else {

        // console.log(data);
        debugger;
        switch (data.r_status)
        {
            case 30: {
                result.val = "IN_TRANSIT";
                result.cane_status = "IN_TRANSIT";
                cal_delivery_vehicle_working_current(data, result);
                doprocess = true;
            } break;
            case 31: {
                result.val = "IDELING";
                result.cane_status = "ENGINE_ON";
                cal_delivery_vehicle_working_current(data, result);
                doprocess = true;
            } break;

            case 32: {
                result.val = "IDELING";
                result.cane_status = "ENGINE_ON";
                cal_delivery_vehicle_working_current(data, result);
                doprocess = true;
            } break;

            case 33: {
                result.val = "STOP";
                result.cane_status = "ENGINE_OFF";
                cal_delivery_vehicle_working_current(data, result);
                doprocess = true;
            } break;

            case 34: {
                result.val = "STOP";
                result.cane_status = "ENGINE_OFF";
                cal_delivery_vehicle_working_current(data, result);
                doprocess = true;
            } break;
                //  case 66: { result.val = "LOADING"; doprocess = true; } break;
        }

        if (doprocess) {
            set_recnow_operate(result, function (res) {
                doprocess = false;
                callback(res);
                return;
            });
        }
        else
        {
            callback([]);
            return;
        }
    }
}

function isave_ho_log(para)
{
   var data_text = JSON.stringify(para);
    var transac_id = para.transactionId
    var sql = "INSERT INTO isave_ho_log(data_text,transaction_id) VALUES(" + utl.sqote(data_text) + "," + utl.sqote(transac_id) + ")";

    db.excute(pg_htt, sql, function (response) {
        if (response == 'oK')
        {
            console.log('+++++++++++++ :) ++++++++++++++');
            console.log('gen HO ' + response);
            console.log('+++++++++++++ :) ++++++++++++++');
        }
    });

    /*
    iexcute(pg_htt, sql, function (pres)
    {
        if (pres == 'oK') {
            console.log('+++++++++++++ :) ++++++++++++++');
            console.log('gen HO '+pres);
            console.log('+++++++++++++ :) ++++++++++++++');
        }
       
    })
    */
}

//เช็ครถบรรทุกเสีย พร้อมใช้งานริไม่
function truck_useability(data, callback)
{
    // (รถตัด (สายพานลำเลียงหมุน + อยู่ในไร่)) + (รถบรรทุก อยู่ภายใน 15 เมตร)
    var st1 = false; var st2 = false;
    var result = { 'blackbox_id': ' ', 'blackbox_id_harvester': ' ', 'plot_code': ' ', 'htt_id_lost': ' ', 'r_time': ' ' };

    //blackbox_id ของ รถตัด
    if (data.htt_status_operation == 'out_of_service')
    {
        hvt.is_infarm(data.blackbox_id, data.lon, data.lat, function (result1) {
            if (result1.length > 0) {
                result.plot_code = result1[0].plot_code;
            }
            st1 = true;
            fin();
        });

        hvt.has_truck_havester(data.blackbox_id, data.lon, data.lat, radius_track_and_havester, function (result2) {
            result.htt_id_lost = result2.htt_id_lost;
            result.blackbox_id_harvester = result2.blackbox_id;
            result.blackbox_id = data.blackbox_id;
            result.r_time = result2.r_time;
            st2 = true;
            fin();
        });


        function fin()
        {
            if (st1 && st2)
            {
                debugger;
                //result.plot_code = '100101004'
                //result.blackbox_id_harvester = '104090169535'

               if (result.blackbox_id_harvester != 0 && result.plot_code != " ")
                {
                    out_of_service.set_truck_ready(result, function (xres)
                    {
                        callback(xres);
                        return;
                    });
               }
                
            }
        }
    }
}


function truck_place(data, callback)
{
    debugger;
    var step1 = false; var step2 = false;

    var result = [];
   // var place = { 'place_th': ' ', 'place_en': ' ' }

    inout.is_inpolygon(data.blackbox_id, data.lon, data.lat, function (res) {
        if (res.length > 0)
        {
           var place = { 'place_th': ' ', 'place_en': 'FARM' }
            result.push(place);
            step1 = true;
            fin();
        }
        else
        {
            if (result.length == 0)
            {
                step1 = true;
                fin();
            }
           
        }
    })

    debugger
    inout.is_infactory(data.blackbox_id, data.htt_place, data.lon, data.lat, data.htt_transectionid, function (place)
    {
        if (place.length > 0) {

            result.push(place[0]);
            step2 = true;
            fin();
        }
        else {
            if (result.length == 0)
            {
                step2 = true;
                fin();
            }
            
        }
    })
   
    function fin()
    {
        if (step1 == true && step2 == true)
        {
            callback(result);
            return;
        }
    }

}

function cal_delivery_vehicle_working_current(data,result) 
{
    truck_place(data, function (place)
    {
        debugger;
        if (place.length > 0)
        {
            var cane_para = data.htt_truck_name + ',' + data.r_time + ',' + result.cane_status + ',' + place[0].place_en + ',' + result.loading_harvest_vehicle_code
            ktc2cane.set_delivery_vehicle_working_current(cane_para, function (xres) {
                console.log(xres);
            });

        }
        else
        {
            if (data.htt_place != 'ROAD_WITHOUT_CANE')
            {
                var cane_para = data.htt_truck_name + ',' + data.r_time + ',' + result.cane_status + ',ROAD_WITH_CANE,' + result.loading_harvest_vehicle_code
                ktc2cane.set_delivery_vehicle_working_current(cane_para, function (xres) {
                    console.log(xres);
                });
            }
        }
    });
}

function get_transectionid(blackbox_id_truck, callback)
{
    var sql = "SELECT htt_transectionid FROM rec_now WHERE blackbox_id=" + utl.sqote(blackbox_id_truck);
    iget_row(htt_realtime, sql, function (rows)
    {
        debugger;
        if (rows.length > 0)
        {
            var res = rows[0]['htt_transectionid'];
            console.log("!!!! get_transectionid !!!" + res);
            callback(res);
            return;
            /*
            if (res === null)
            {
                res = create_id();
                var sql_truck = "UPDATE rec_now SET htt_transectionid=" + utl.sqote(res) + " WHERE blackbox_id=" + utl.sqote(blackbox_id_truck);
                iexcute(sql_truck, function (xres2)
                {
                    console.log('create get_transectionid ' + xres2);
                    callback(res);
                    return;
                });
               
            }
            else {
                callback(res);
                return;
            }*/
        } else {
            callback(0);
            return;
        }
    })
}

    //#endregion


    //#region

function has_workout_zone(zone_data, callback)
{
    // var data = { 'blackbox_id': ' ', 'plot_code': ' ', 'zone_id': ' ', 'workout_zone': ' ', 'r_time': ' ' };
    var date_now = moment(zone_data.r_time).format('YYYY-MM-DD');
    var sql = "  SELECT blackbox_id ";
    sql += " FROM history_status_havester  ";
    sql += " WHERE status_type_start='77' ";
    sql += " AND blackbox_id= " + utl.sqote(zone_data.blackbox_id);
    sql += " AND plot_code_start=" + utl.sqote(zone_data.plot_code);
    sql += " AND get_ymd(start_record)=" + utl.sqote(date_now);

    iget_row(pg_htt, sql, function (rows) {
        if (rows.length > 0) {
            callback(rows);
            return;
        } else {
            callback([]);
            return;
        }
    });

}

function get_mile_truck(blackbox_id_truck, callback)
{
    var sql = "SELECT htt_truck_name,htt_transectionid,r_distance,htt_truck_distance,(r_distance -htt_truck_distance)as miles FROM rec_now WHERE htt_is_send_order_distance='0' AND blackbox_id=" + utl.sqote(blackbox_id_truck);
    iget_row(htt_realtime, sql, function (rows) {
        if (rows.length > 0) {
            callback(rows);
            return;
        } else {
            callback([]);
            return;
        }
    });
}

function set_already_send_orderdistance(blackbox_id_truck, flag, callback)
{
    // htt_is_send_order_distance
    flag = flag == 'send' ? '1' : '0'
    var sql = "UPDATE rec_now SET htt_is_send_order_distance=" + utl.sqote(flag) + " WHERE blackbox_id="+utl.sqote(blackbox_id_truck);
    iexcute(sql, function (res) {
        console.log(' set_already_send_orderdistance ' + res);
        callback(res);
        return;
    });
}

//set recnow
function set_recnow_operate(para, callback) {
    debugger;
    var query_update = squel.update()
        .table('realtime')
        .set(para.column, para.val)
        .where('modem_id = ' + utl.sqote(para.key))
        .toString();

    iexcute(query_update, function (res) {
        callback(res);
        return;
    });
}

function get_master_factory(callback)
{
    var sql = "SELECT company_code,year FROM master_factory_config WHERE is_master=true";
    iget_row(pg_htt, sql, function (rows)
    {
        callback(rows);
        return;
    });
}

function get_caneHO(blackbox_id,callback) 
{
    var sql=" ";
    sql +=" SELECT "
    sql +=" htt_qt as bpcode "
    sql +=",htt_plotcode as plotcode "
    sql +=",htt_harvester_name as harvester_code  "
    sql +=",htt_truck_name as  truck_code"
    sql +=",htt_transectionid "
    sql +=",to_char(htt_cuttingtime, 'YYYY-MM-DD HH24:MI:SS') as htt_cuttingtime "
    sql +="FROM rec_now WHERE blackbox_id="+utl.sqote(blackbox_id) //'189600110834'
    iget_row(htt_realtime, sql, function (res) {
        callback(res);
        return;
    });
}

function iget_row(connection,sql,callback)
{
    db.get_rows(connection, sql, function (rows) {
        callback(rows);
        return;
    });
}

function iexcute(sql,callback) {
    db.excute(htt_realtime, sql, function (response) {
        if (response == 'oK') {
           // console.log('Update-Complete');
            callback(response);
            return;
        } else {
            console.log('Update-failed');
            callback(response);
            return;
        }
    });
}

    //#endregion


//#region datatest
    //lon: 102.195250325693, lat:16.4149841094033

   // lon: 102.075633, lat: 16.406717,
    //		
var data = {
    blackbox_id: '189600104736',
    r_time: '2015-12-23 23:54:48',
    r_status: 11,
    lon: 102.055626, lat: 16.433685,
    r_speed: 0,
    tambol: 'บ้านแก้ง',
    amphur: 'ภูเขียว',
    province: 'ชัยภูมิ',
    htt_status_operation: 'IN_TRANSIT',
    htt_status_useability: 'ready',
    htt_status_truck: null,
    htt_plotcode: '10',
    htt_place: null,
    htt_havester: '0',
    htt_id_lost: null,
    htt_workout_zone: null,
    htt_name_farmer: '-102   -',
    htt_phone_farmer: null
}

var data_ocsb ={ blackbox_id: '1010003010',
    r_distance: 65.91999816894531,
    r_time: '2016-12-17 02:30:09',
    r_io: 5,
    r_status: 3,
    r_status_old: '3',
    lon: 102.499198,
    lat: 13.723384,
    r_speed: 5,
    tambol: 'บ้านใหม่หนองไทร',
    province: 'สระแก้ว',
    htt_status_operation: 'UNCUTTING_LOADING',
    htt_status_useability: 'ready',
    htt_status_truck: 'EMPTY',
    htt_plotcode: null,
    htt_place: 'ROAD_WITHOUT_CANE',
    htt_harvester_or_truck: '0',
    htt_id_lost: null,
    htt_workout_zone: null,
    htt_name_farmer: null,
    htt_phone_farmer: null,
    htt_cuttingtime: null,
    htt_truck_distance: null,
    htt_match_harvester_truck: null,
    htt_qt: null,
    htt_harvester_name: 'à¸£à¸à¸à¸±à¸_26',
    htt_truck_name: null,
    htt_transectionid: null,
    htt_is_send_order_distance: '0' }

//#endregion


//#region export
exports.havester_operate = havester_operate;
exports.havester_useability = havester_useability;
exports.havester_workout_zone = havester_workout_zone;
exports.harvester_stores_status_cutting = harvester_stores_status_cutting;


exports.truck_place = truck_place;
exports.truck_useability = truck_useability;
exports.truck_operate = truck_operate;
exports.get_transectionid = get_transectionid;

exports.get_mile_truck = get_mile_truck;
exports.set_recnow_operate = set_recnow_operate; 
exports.set_already_send_orderdistance = set_already_send_orderdistance;
//#endregion



    //189600128641,102.12372,16.483768




//#region timeout
    /*
setTimeout(function ()
{
    //recnow_operate(data, function (x) {
    //    console.log(x);
    //});
    //102.134222280683, 16.4865332748977

   var t = {"harvester_name":"K004791","truck_name":"K005089","is_inzone":false,"name_farmer":"นายประทิน   คงภูเขียว","zone_id":"11","truck_blackbox_id":"189600129339","plot_code":"105671278","r_time":"2016-03-15 08:57:46.000","qt":"105671","truck_distance":5560.689}
   havester_operate(data_ocsb, function (xres) {
       console.log(xres);
   });
      debugger;

  //  console.log(inow);
 

    //truck_useability(data_recnow_truck, function (x) {})
    //recnow_useability_havester(data);
    //  recnow_workout_zone(data_recnow_workout_zone);

   // truck_place(data_recnow_truck_place, function (x) { });

  //  recnow_truck_finish_loading();
  
    //step1
 //  recnow_match_harvester_truck();

    //step2
 //  recnow_truck_operate_finish_loading()

    //step3
  //recnow_truck_place();

    //step4 
    //  final_step();

    //get_mile_truck('189600132333', function (res) {
    //    debugger;
    //    console.log(res);
    //});

  //  get_transectionid('189600123131', function () {})
   // recnow_workout_zone();
}, 1000);
*/


//#region  bug
/*
 * 
 iTrigger-1 +++++++++++++++++++++++++++++++++++++++++++++++
iTrigger-1 blackbox_id:                189600128338
r_distance:                 214.49445
r_time:                     2015-12-12 11:03:56
r_io:                       10
r_status:                   30
r_status_old:               30
r_lon:                      102.12205
r_lat:                      16.481361
r_speed:                    6
htt_status_operation:       IN_TRANSIT
htt_status_useability:      ready
htt_status_truck:           EMPTY
htt_plotcode:               null
htt_place:                  PARK_PREPARE
htt_harvester_or_truck:     1
htt_id_lost:                null
htt_workout_zone:           null
htt_name_farmer:            null
htt_phone_farmer:           null
htt_match_harvester_truck:  null
htt_qt:                     null
htt_harvester_name:         null
htt_truck_name:             K004997
htt_transectionid:          null
htt_is_send_order_distance: 0
iTrigger-1 gen_id 20151212110445288
iTrigger-1 is_infactory{"blackbox_id":"189600128338","htt_place":"PARK_PREPARE","lon":102.12205,"lat":16.481361,"place":"à¸¥à¸²à¸à¸à¸­à¸"}
iTrigger-1 is_infactory{"blackbox_id":"189600128338","htt_place":"PARK_PREPARE","lon":102.12205,"lat":16.481361,"place":"à¸¥à¸²à¸à¸à¸­à¸"}
iTrigger-1 ++++++++++++++ null,2015-12-12 11:04:45.289,park_outside_timestamp+++++++++++++++++
iTrigger-1 is_infactory Call Service CANE  harvest_order_distance [{"htt_transectionid":null,"r_distance":214.49445,"htt_truck_distance":null,"miles":null}]
iTrigger-1 is_infactory Call Service CANE  harvest_order_distance [{"htt_transectionid":null,"r_distance":214.49445,"htt_truck_distance":null,"miles":null}]
iTrigger-1 ++++++++++++++ null,2015-12-12 11:04:45.291,park_outside_timestamp+++++++++++++++++
iTrigger-1 Truck_operateoK
iTrigger-1 oK
iTrigger-1 +++++++++++++++++++++++++++++++++++++++++++++++
iTrigger-1 blackbox_id:                189600132333
r_distance:                 1667.6311
r_time:                     2015-12-12 11:03:50
r_io:                       10
r_status:                   30
r_status_old:               32
r_lon:                      102.121185
r_lat:                      16.47797
r_speed:                    8
htt_status_operation:       null
htt_status_useability:      ready
htt_status_truck:           EMPTY
htt_plotcode:               null
htt_place:                  null
htt_harvester_or_truck:     null
htt_id_lost:                null
htt_workout_zone:           null
htt_name_farmer:            null
htt_phone_farmer:           null
htt_match_harvester_truck:  null
htt_qt:                     null
htt_harvester_name:         null
htt_truck_name:             null
htt_transectionid:          null
htt_is_send_order_distance: 0
iTrigger-1 oK
iTrigger-1 Truck_Place
iTrigger-1 [ returnValue: undefined ]
iTrigger-1 [ returnValue: 0 ]
iTrigger-1 send harvest_order_distance transectionid : null miles : null 
is_infactory 
iTrigger-1 Truck_Place
iTrigger-1 null,2015-12-12 11:04:45.291,park_outside_timestamp set_delivery_vehicle_timestamp 
send harvest_order_distance transectionid : null miles : null 
iTrigger-1 is_infactory 
iTrigger-1 null,2015-12-12 11:04:45.289,park_outside_timestamp set_delivery_vehicle_timestamp 
iTrigger-1 [ returnValue: 0 ]
iTrigger-1 [ returnValue: 0 ]

 */

//#endregion


//step1
function recnow_match_harvester_truck()
{
    debugger;
    //189600101733,102.12282,16.477383

    var engin_off = {
 'blackbox_id': '189600101733'
 , 'r_time': '2015-11-18 21:41:36'
  , 'r_io': 10
   , 'r_status': '34'
  , 'r_status_old': '30'
  , 'lon': '102.122765'
  , 'lat': '16.477407'
  , 'r_speed': '5', 'r_distance': 48.508785
  , 'htt_status_operation': 'UNCUTTING_LOADING'
  , 'tambol': 'หนองข่า'
  , 'amphur': 'เกษตรสมบูรณ์'
  , 'province': 'ชัยภูมิ'
  , 'htt_harvester_name': 'K004019'
    }

    var engin_on = {
        'blackbox_id': '189600101733'
    , 'r_time': '2015-11-18 21:41:36'
    , 'r_io': 11
    , 'r_status': '30'
    , 'r_status_old': '30'
    , 'lon': '102.122765'
    , 'lat': '16.477407'
    , 'r_speed': '5', 'r_distance': 48.508785
    , 'htt_status_operation': 'UNCUTTING_LOADING'
    , 'tambol': 'หนองข่า'
    , 'amphur': 'เกษตรสมบูรณ์'
    , 'province': 'ชัยภูมิ'
    , 'htt_harvester_name': 'K004019'
    }

    havester_operate(engin_on, function (x) {
        debugger;
        console.log(x);
    });
}

//step2
function recnow_truck_operate_finish_loading() {


    // (102.122, 16.477) //
    //ลานนอก  //'LOADING'
    //  , 'lon': '102.121', 'lat': '16.4778' 
    var data = {
        'blackbox_id': '189600128641', 'r_time': '2015-11-05 18:43:41'
    , 'r_status': 30
    , 'r_status_old': ' '
    , 'lon': '102.121', 'lat': '16.4778'
    , 'r_speed': '20'
    , 'htt_status_operation': 'LOADING' //'IN_TRANSIT' //
    , 'htt_place': 'FARM'
     , 'htt_truck_name': '002'
    }

    truck_operate(data, function (res) {
        console.log(res);
    });
}

//step3
function recnow_truck_place() {

    //ลานใน  'lon': '102.119', 'lat': '16.4825'
    //ลานนอก 'lon': '102.121', 'lat': '16.4778' 
    var data = {
        'blackbox_id': '189600128641', 'r_time': '2015-11-05 19:43:41'
    , 'r_status': 33
    , 'r_status_old': ' '
    , 'lon': '102.121', 'lat': '16.4778'
    , 'r_speed': '20'
    , 'htt_status_operation': 'IN_TRANSIT'
    , 'htt_place': 'FARM'
       , 'htt_truck_name': '002'
    }

    truck_place(data, function (res) {
        console.log(res);
    });
}

//step4
function final_step()
{
    //ออกนอกโรงงาน (102.125,16.4782)

    var data = {
        'blackbox_id': '189600128641', 'r_time': '2015-11-05 19:53:41'
    , 'r_status': 33
    , 'r_status_old': ' '
    , 'lon': '102.125', 'lat': '16.4782'
    , 'r_speed': '20'
    , 'htt_status_operation': 'IN_TRANSIT'
    , 'htt_place': 'PARK_INSIDE'
    , 'htt_truck_name': '002'
    }

    truck_operate(data, function (res) {
        console.log(res);
    });
}

//truck_operate
function recnow_truck_finish_loading()
{
    var data = {
        'blackbox_id': '189600110834', 'r_time': '2015-11-05 16:43:41'
  , 'r_status': 10
  , 'r_status_old': ' '
  , 'lon': '101.99815'
  , 'lat': '16.520133'
  , 'r_speed': '20', 'r_distance': 88.508785
  , 'htt_status_operation': 'LOADING'
    }

    var data2 = {
        'blackbox_id': '189600110834', 'r_time': '2015-11-05 16:43:41'
 , 'r_status': 30
 , 'r_status_old': ' '
    , 'lon': '101.99815'
    , 'lat': '16.520133'
    , 'r_speed': '20'
    , 'htt_status_operation': 'out_of_service'
    , 'htt_place': 'park_inside'
    , 'htt_truck_name': 'K004019'
    }

    truck_operate(data2, function (x) {
        console.log(x);
    });
}



function recnow_workout_zone()
{
    var data_recnow_workout_zone = {
        blackbox_id: '189600124536',
        r_time: '2016-01-05 16:55:11',
        r_io: 11,
        lon: 101.83527, lat: 16.120234,
        r_speed: 0,
        tambol: 'บ้านแก้ง',
        amphur: 'ภูเขียว',
        province: 'ชัยภูมิ',
        htt_status_operation: 'IN_TRANSIT',
        htt_status_useability: 'ready',
        htt_status_truck: null,
        htt_plotcode: '10',
        htt_place: null,
        htt_havester: '0',
        htt_id_lost: null,
        htt_workout_zone: null,
        htt_name_farmer: '-102   -',
        htt_phone_farmer: null
    };

    havester_workout_zone(data_recnow_workout_zone, function (xres) {
        console.log(' '+xres);
    });
}

function recnow_truck() {

    var data_recnow_truck = {
        'blackbox_id': '189600110834', 'r_time': '2015-11-05 15:43:41'
       , 'r_status': 10
       , 'r_status_old': ' '
        //, 'lon': '102.134222280683'
        //, 'lat': '16.4865332748977'
       , 'lon': '101.99815'
       , 'lat': '16.520133'
       , 'r_speed': '20'
       , 'htt_status_operation': 'out_of_service'
    }

}

/*
UPDATE rec_now SET r_status='33' WHERE blackbox_id='104090170325'
*/

    //#endregion


